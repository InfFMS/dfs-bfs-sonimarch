# Даны N городов и M дорог между ними. Дороги двусторонние (граф неориентированный). 
# Известно, что города разделены на группы (острова), 
# между которыми дорог нет. То есть граф состоит из нескольких компонент связности (островов). 
# Необходимо ответить на следующие вопросы:
# 
# 1. Есть ли путь между двумя заданными городами (вершинами)?
# 2. Сколько всего островов (компонент связности) в графе?
# 3.Перечислить, какие города принадлежат каждому острову.
# 
# Входные данные:
# Первая строка: N (количество городов) и M (количество дорог).
# Следующие M строк: пары чисел u и v, обозначающие дорогу между городами u и v.
# Затем вводится два числа: start и end — номера городов, между которыми нужно проверить наличие пути.
# 
# Выходные данные:
# Ответ на вопрос, есть ли путь между start и end ("YES" или "NO").
# Количество островов (компонент связности) в графе.
# Список городов для каждого острова (в порядке возрастания номеров островов).

# Пример 1:
# 5 3
# 1 2
# 2 3
# 4 5
# 1 4
# 
# Ожидаемый вывод:
# 
# NO
# 2
# 1: [1, 2, 3]
# 2: [4, 5]

# Пример 2:
# 6 4
# 1 2
# 3 4
# 5 6
# 2 3
# 3 5
# 
# Ожидаемый вывод:
# 
# YES
# 1
# 1: [1, 2, 3, 4, 5, 6]

# Пример 3:
# 7 0
# 1 2
# 
# Ожидаемый вывод:
# 
# NO
# 7
# 1: [1]
# 2: [2]
# 3: [3]
# 4: [4]
# 5: [5]
# 6: [6]
# 7: [7]

import random
d = {}
n, m = map(int, input().split())
for i in range(m):
    a, b = map(int, input().split())
    if a in d.keys():
        d[a].append(b)
    else:
        d[a] = [b]
    if b in d.keys():
        d[b].append(a)
    else:
        d[b] = [a]


def dfs(graph, start, visited=None):
    if visited is None:
        visited = []
    visited.append(start)

    for next in list(set(graph[start]) - set(visited)):
        dfs(graph, next, visited)
    return visited


st, en = map(int, input().split())
if en in dfs(d, st):
    print('YES')
else:
    print("NO")

l = []
s = set(range(1, 6))
b = s
cnt = 1
while len(b) > 0:
    a = dfs(d, random.choice(list(b)))
    l.append(f'{cnt}: {sorted(set(a))}')
    cnt += 1
    b = b - set(a)



print(cnt - 1)
for i in l:
    print(i)

